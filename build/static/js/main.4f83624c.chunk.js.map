{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","components/pages/AllQuotes.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","NewCommentForm","onAddedComment","commentTextRef","useRef","useEffect","submitFormHandler","event","preventDefault","text","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","props","item","CommentsList","comments","map","comment","Comments","params","useParams","useState","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","length","onClick","MainNavigation","header","logo","nav","to","navData","isActive","active","Layout","children","main","QuoteItem","author","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","console","log","sorting","pathname","list","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","NewQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","element","replace","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4f83624c.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-http-f49f3-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = ({ onAddedComment, quoteId }) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      // comment 추가 완료 시 comment list 출력\n      onAddedComment();\n    }\n  }, [error, onAddedComment, status]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    sendRequest({\n      quoteId,\n      commentData: { text: commentTextRef.current.value },\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const params = useParams();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    // comment update\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"completed\" && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","import { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink\n              to=\"/quotes\"\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\n            >\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/new-quote\"\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\n            >\n              Add a quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import MainNavigation from \"./MainNavigation\";\n\nimport classes from \"./Layout.module.css\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <MainNavigation />\n      <main className={classes.main}>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      // 오름차순\n      console.log(\"오름차순\");\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search); // JS의 기본 생성자 함수, key와 value를 갖는 객체를 생성한다.\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\"; // key를 사용하여 해당 값을 가져옴.\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    // history객체는 URL을 바꿀 수 있게 하며,\n    // location객체는 최근 로드된 페이지와 URL에 대한 정보가 있음. -> search속성에서 쿼리매개변수를 확인할 수 있음\n    navigate(location.pathname, {\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(); // 페이지 컴포넌트는 재평가가 됨\n\n    // search(쿼리매개변수)가 복잡해질 경우 해당 객체를 사용하면 가독성이 좋아짐.\n    /*\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n    */\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllQuotes } from \"../../lib/api\";\nimport QuoteList from \"../quotes/QuoteList\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    // 이 컴포넌트가 렌더링 될때마다 Get함수가 실행됨\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"error\") {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  // quote가 하나도 없을 경우\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import React, { Suspense } from \"react\";\nimport { Link, Navigate, Route, Routes } from \"react-router-dom\";\n\nimport Layout from \"./components/layout/Layout\";\n// 대부분의 사용자가 AllQuotes페이지를 방문할 것이라고 생각된다면, 로딩을 지연시키는 것은 불필요하다.\nimport AllQuotes from \"./components/pages/AllQuotes\";\n// import NewQuote from \"./components/pages/NewQuote\";\n// import NotFound from \"./components/pages/NotFound\";\n// import QuoteDetail from \"./components/pages/QuoteDetail\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\n// 코드를 미리 다운로드하기 위해 미리 실행하지 않고, 필요할때만 실행한다!\nconst NewQuote = React.lazy(() => import(\"./components/pages/NewQuote\"));\nconst QuoteDetail = React.lazy(() => import(\"./components/pages/QuoteDetail\"));\nconst NotFound = React.lazy(() => import(\"./components/pages/NotFound\"));\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Routes>\n          <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/\" replace element={<Navigate to=\"/quotes\" />} />\n          <Route path=\"/quotes\" element={<AllQuotes />} />\n          <Route path=\"/quotes/:quoteId\" element={<QuoteDetail />}>\n            <Route\n              path=\"\"\n              element={\n                <div className=\"centered\">\n                  <Link className=\"btn--flat\" to=\"comments\">\n                    Load Comments\n                  </Link>\n                </div>\n              }\n            />\n            <Route path=\"comments\" element={<Comments />} />\n          </Route>\n          <Route path=\"new-quote\" element={<NewQuote />} />\n          {/* *(와일드 문자): 모든 경로를 뜻함, 맨 아래에 작성하여 위 라우트 경로와 일치하지 않은 모든 경로에 해당 컴포넌트가 렌더링 됨!  */}\n        </Routes>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}